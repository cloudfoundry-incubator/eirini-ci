#!/bin/bash

is-pod-ready() {
  declare -r namespace="${1:?Namespace not provided}"
  declare -r resource_name="${2:?Resource name not provided}"
  local ready
  local phase
  ready="$(kubectl get pods "$resource_name" --namespace "$namespace" --output json | jq --raw-output '.status.conditions[] | select(.type == "ContainersReady") | .status')"
  phase="$(kubectl get pods "$resource_name" --namespace "$namespace" --output jsonpath='{.status.phase}')"
  [[ "$ready" == "True" && "$phase" == "Running" ]]
}

is-labeled-container-ready() {
  declare -r namespace="${1:?Namespace not provided}"
  declare -r label="${2:?Label not provided}"
  kubectl get pods --selector "$label" --namespace "$namespace" --output jsonpath='{.items[0].status.containerStatuses[0].ready}'
}

purge-helm-deployments() {
  helm init --client-only
  helm list --short | xargs -n 1 helm delete --purge

  local counter=0
  while [[ $(helm list --short | wc ) -gt 0 ]]; do
    echo "Waiting for helm to purge releases"
    if [[ $counter -gt 300 ]]; then
      echo "SCF is NOT ready" >&2
      exit 1
    fi
    counter=$((counter + 1))
    sleep 1
  done
}
