spruce:
- base: $PROJECT_ROOT/pipelines/modules/kube-cluster.yml
  prune:
  - meta
  modify:
    delete:
      - "jobs.name:prepare-cluster-((world-name)).plan.task:create-cluster-config.params.DIEGO_CELL_COUNT"
  merge:
  - with:
      files:
      - $PROJECT_ROOT/pipelines/dev/meta.yml
  to: {{cluster-with-opi}}

- base: $PROJECT_ROOT/pipelines/modules/deploy-eirini.yml
  prune:
  - meta
  - cloud-specific
  modify:
    delete:
      - "jobs.name:deploy-scf-eirini-((world-name)).plan.get:eirini-release.trigger"
      - "jobs.name:deploy-scf-uaa-((world-name)).plan.task:deploy-uaa.input_mapping"
      - "jobs.name:deploy-scf-uaa-((world-name)).plan.get:scf-uaa-resources.trigger"
      - "resources.name:scf-uaa-resources"
    set:
      - path: "jobs.name:deploy-scf-eirini-((world-name)).plan.task:deploy-scf.file"
        value: ci-resources/tasks/deploy-scf/task-with-image-overrides.yml
      - path: jobs.name:deploy-scf-uaa-((world-name)).plan.get:scf-uaa-resources.get
        value: eirini-release
  merge:
  - with:
      files:
      - $PROJECT_ROOT/pipelines/modules/deploy-with-image-tag.yml
      - $PROJECT_ROOT/pipelines/dev/meta.yml
      - $PROJECT_ROOT/pipelines/modules/smoke-tests-with-eirini-release-trigger.yml
      - $PROJECT_ROOT/pipelines/modules/cloud-specific/iks.yml
  to: {{eirini-with-opi}}

- base: $PROJECT_ROOT/pipelines/modules/run-core-cats.yml
  prune:
  - meta
  - skipped_cats
  - cloud-specific
  merge:
  - with:
      files:
      - $PROJECT_ROOT/pipelines/modules/cats-with-eirini-trigger.yml
      - $PROJECT_ROOT/pipelines/dev/meta.yml
      - $PROJECT_ROOT/pipelines/modules/opi-skipped-cats.yml
      - $PROJECT_ROOT/pipelines/modules/cats-with-eirini-release-trigger.yml
      - $PROJECT_ROOT/pipelines/modules/cloud-specific/iks.yml
  to: {{cats-with-opi}}

- base: $PROJECT_ROOT/pipelines/modules/test-and-build-docker-images.yml
  modify:
    delete:
      - "resources.name:eirini-secret-smuggler"
      - "resources.name:eirini-fluentd"
      - "jobs.name:run-fluentd-unit-tests.plan.task:run-unit-tests.input_mapping"
      # Disable auto trigger
      - "jobs.name:run-tests.plan.0.in_parallel.get:cluster-((world-name))-staging-event-ready.trigger"
      - "jobs.name:run-tests.plan.0.in_parallel.get:sample-configs.trigger"
    set:
      - path: jobs.name:create-secret-smuggler-docker-image.plan.task:make-docker-build-args.input_mapping.repository
        value: eirini
      - path: jobs.name:create-fluentd-docker-image.plan.task:make-docker-build-args.input_mapping.repository
        value: eirini

      # Run test after cleanup-environment
      - path: jobs.name:run-tests.plan.0.in_parallel.get:eirini.passed.+
        value: bump-go-packages

      # Build secret-smuggler image from PR, after cleanup environment
      - path: jobs.name:create-secret-smuggler-docker-image.plan.0.in_parallel.get:eirini-secret-smuggler.get
        value: eirini
      # - path: jobs.name:create-secret-smuggler-docker-image.plan.0.in_parallel.get:eirini.passed.+
      #   value: clean-up-environment
      - path: jobs.name:create-secret-smuggler-docker-image.plan.put:docker-secret-smuggler.params.build
        value: eirini/docker/registry/certs/smuggler

      # Build fluentd image from PR, after cleanup environment
      - path: jobs.name:run-fluentd-unit-tests.plan.0.in_parallel.get:eirini-fluentd.get
        value: eirini
      - path: jobs.name:create-fluentd-docker-image.plan.0.in_parallel.get:eirini-fluentd.get
        value: eirini
      - path: jobs.name:create-fluentd-docker-image.plan.get:eirini-fluentd.get
        value: eirini
      - path: jobs.name:create-fluentd-docker-image.plan.put:docker-fluentd.params.build
        value: eirini/fluentd

  merge:
  - with:
      files:
      - $PROJECT_ROOT/pipelines/dev/meta.yml
  to: {{test-and-build-docker}}

- base: $PROJECT_ROOT/pipelines/modules/empty.yml
  merge:
  - with:
      files:
      - {{cluster-with-opi}}
      - {{test-and-build-docker}}
      - {{eirini-with-opi}}
      - {{cats-with-opi}}
      - $PROJECT_ROOT/pipelines/modules/tag-images.yml
      - $PROJECT_ROOT/pipelines/modules/bump-go-packages.yml
  to: $PIPELINE_YML
