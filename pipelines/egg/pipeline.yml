resources:
- name: eirini-private-config
  type: git
  icon: git
  source:
    branch: master
    private_key: ((github-private-key))
    uri: git@github.com:cloudfoundry/eirini-private-config
- name: postfacto
  icon: egg-easter
  type: github-release
  check_every: 12h
  source:
    owner: pivotal
    repository: postfacto
    globs: package.zip
- name: ci-resources
  icon: git
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/eirini-ci
- name: jefe
  icon: git
  type: git
  source:
    branch: master
    uri: https://github.com/herrjulz/jefe
- name: eirinidotcf
  icon: git
  type: git
  source:
    branch: master
    uri: https://github.com/eirini-forks/eirinidotcf
- name: every-morning
  icon: alarm
  type: time
  source:
    start: 5:00 AM
    stop: 6:00 AM

jobs:
- name: unclaim-clusters
  plan:
  - get: every-morning
    trigger: true
  - task: unclaim
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: eirini/ci
      params:
          JEFE_ADMIN_PASSWORD: ((jefe-admin-pass))
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          set -eoux pipefail

          curl -X PUT -u admin:$JEFE_ADMIN_PASSWORD https://jefe.acceptance.eu-gb.containers.appdomain.cloud/envs/unclaim

- name: deploy-jefeðŸŒµ
  serial: true
  plan:
  - in_parallel:
    - get: jefe
      trigger: true
    - get: eirini-private-config
  - task: deploy
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: eirini/ci
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          set -euo pipefail

          values=eirini-private-config/environments/kube-clusters/acceptance/values.yaml
          cf_admin_password="$(goml get -f "$values" -p "secrets.CLUSTER_ADMIN_PASSWORD")"
          cf_domain="$(goml get -f "$values" -p "env.DOMAIN")"
          cf api "api.$cf_domain" --skip-ssl-validation
          cf auth admin "$cf_admin_password"
          cf target -o jefe -s jefe

          set -x
          ./eirini-private-config/jefe/deploy.sh $PWD/jefe
      params:
        JEFE_GITHUB_CLIENT_ID: ((jefe-client-id))
        JEFE_GITHUB_SECRET: ((jefe-client-secret))
        JEFE_DSN: jefeuser:((jefe-dbuser-pass))@tcp(sl-eu-gb-p05.dblayer.com:19522)
        JEFE_O_AUTH_ORG: eirini-forks
        JEFE_ADMIN_PASSWORD: ((jefe-admin-pass))
      inputs:
      - name: jefe
      - name: eirini-private-config
- name: deploy-postfacto
  serial: true
  plan:
  - in_parallel:
    - get: postfacto
      trigger: true
    - get: eirini-private-config
    - get: ci-resources
  - task: get-credentials
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: eirini/ibmcloud
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          set -euo pipefail

          source ci-resources/scripts/ibmcloud-functions
          ibmcloud-login
          export-kubeconfig "$CLUSTER_NAME"

          redis_password=$(kubectl get secret postfacto-redis -n postfacto-redis -o json | jq -r '.data | .["redis-password"]'  | base64 -d)
          echo $redis_password >redis-password/password
      inputs:
      - name: eirini-private-config
      - name: ci-resources
      outputs:
      - name: redis-password
    params:
      CLUSTER_NAME: acceptance
      IBMCLOUD_ACCOUNT: ((ibmcloud-account))
      IBMCLOUD_USER: ((ibmcloud-user))
      IBMCLOUD_PASSWORD: ((ibmcloud-password))
  - task: deploy
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: eirini/ci
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          set -euo pipefail

          unzip postfacto/package.zip -d postfacto/
          cp eirini-private-config/postfacto-deployment/api/config.js postfacto/package/assets/client/
          redis_password="$( cat redis-password/password )"
          values=eirini-private-config/environments/kube-clusters/acceptance/values.yaml
          cf_domain="$(goml get -f "$values" -p "env.DOMAIN")"
          cf_admin_password="$(goml get -f "$values" -p "secrets.CLUSTER_ADMIN_PASSWORD")"
          cf api "api.$cf_domain" --skip-ssl-validation
          cf auth admin "$cf_admin_password"
          cf target -o postfacto -s postfacto

          domain="$(goml get -f "$values" -p "eirini.opi.ingress_endpoint")"

          cf rename postfacto-api postfacto-api-old

          cf push -f eirini-private-config/postfacto-deployment/api/manifest.yml \
            -p postfacto/package/assets \
            --hostname retro-temp \
            -d "${domain}" \
            --var api-app-name=postfacto-api \
            --var pcf-url=${domain} \
            --var domain=${domain} \
            --var namespace=postfacto-redis \
            --var redis-password=${redis_password} \
            --var mysql-password="((mysql-password))"

          curl --fail "https://retro-temp.${domain}"
          cf map-route postfacto-api ${domain} --hostname retro
          cf unmap-route postfacto-api-old ${domain} --hostname retro
          cf unmap-route postfacto-api ${domain} --hostname retro-temp

          curl --fail "https://retro.${domain}"
          cf delete -f postfacto-api-old
      inputs:
      - name: postfacto
      - name: eirini-private-config
      - name: ci-resources
      - name: redis-password
- name: deploy-eirinidotcf
  serial: true
  plan:
  - in_parallel:
    - get: ci-resources
    - get: eirinidotcf
      trigger: true
    - get: eirini-private-config
  - task: deploy-db
    file: ci-resources/tasks/deploy-eirinidotcf-db/task.yml
    params:
      CLUSTER_NAME: acceptance
      IBMCLOUD_ACCOUNT: ((ibmcloud-account))
      IBMCLOUD_USER: ((ibmcloud-user))
      IBMCLOUD_PASSWORD: ((ibmcloud-password))
  - task: deploy-web
    file: ci-resources/tasks/deploy-eirinidotcf/task.yml
