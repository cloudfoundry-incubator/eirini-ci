groups:
- (( defer merge ))
- name: all
  jobs:
  - (( defer prepend ))
  - run-tests
  - run-fluentd-unit-tests
  - create-go-docker-images
  - create-secret-smuggler-docker-image
  - create-fluentd-docker-image
- name: test-and-build
  jobs:
  - run-tests
  - run-fluentd-unit-tests
  - create-go-docker-images
  - create-secret-smuggler-docker-image
  - create-fluentd-docker-image
jobs:
- name: run-tests
  plan:
  - in_parallel:
    - get: (( concat "cluster-" meta.cluster-name "-staging-event-ready" ))
      trigger: true
      passed:
      - (( concat "prepare-cluster-" meta.cluster-name ))
    - get: eirini
      trigger: true
      passed: [] # Required for PR pipeline
    - get: ci-resources
    - get: sample-configs
      trigger: true
    - get: golang-lint
      trigger: true
      params:
        skip_download: true
  - in_parallel:
    - task: run-unit-tests
      file: ci-resources/tasks/run-unit-tests/task.yml
    - task: run-static-checks
      file: ci-resources/tasks/run-static-checks/task.yml
    - do:
      - task: download-kubeconfig
        params:
          IBMCLOUD_ACCOUNT: ((ibmcloud-account))
          IBMCLOUD_USER: ((ibmcloud-user))
          IBMCLOUD_PASSWORD: ((ibmcloud-password))
          CLUSTER_NAME: (( grab meta.cluster-name ))
        file: ci-resources/tasks/download-kubeconfig/task.yml
      - task: run-integration-tests
        file: ci-resources/tasks/run-integration-tests/task.yml
- name: create-go-docker-images
  plan:
  - in_parallel:
    - get: eirini
      trigger: true
      passed:
      - run-tests
    - get: ci-resources
  - task: make-docker-build-args
    file: ci-resources/tasks/make-docker-build-args/task.yml
    input_mapping:
      repository: eirini
  - in_parallel:
    - put: docker-opi
      params:
        build: eirini
        dockerfile: eirini/docker/opi/Dockerfile
        build_args_file: docker-build-args/args.json
    - put: docker-bits-waiter
      params:
        build: eirini
        dockerfile: eirini/docker/bits-waiter/Dockerfile
        build_args_file: docker-build-args/args.json
    - put: docker-rootfs-patcher
      params:
        build: eirini
        dockerfile: eirini/docker/rootfs-patcher/Dockerfile
        build_args_file: docker-build-args/args.json
- name: create-secret-smuggler-docker-image
  plan:
  - in_parallel:
    - get: eirini-secret-smuggler
      trigger: true
      passed: [] # Required for PR pipeline
    - get: ci-resources
  - task: make-docker-build-args
    file: ci-resources/tasks/make-docker-build-args/task.yml
    input_mapping:
      repository: eirini-secret-smuggler
  - put: docker-secret-smuggler
    params:
      build: eirini-secret-smuggler/docker/registry/certs/smuggler
      build_args_file: docker-build-args/args.json

- name: run-fluentd-unit-tests
  plan:
  - in_parallel:
    - get: eirini-fluentd
      trigger: true
      passed: [] # Required for PR pipeline
    - get: ci-resources
  - task: run-unit-tests
    file: ci-resources/tasks/run-fluentd-tests/task.yml
    input_mapping:
      eirini: eirini-fluentd
- name: create-fluentd-docker-image
  plan:
  - in_parallel:
    - get: eirini-fluentd
      trigger: true
      passed: [run-fluentd-unit-tests]
    - get: ci-resources
    - get: fluentd-image
      trigger: true
      params:
        skip_download: true
  - task: make-docker-build-args
    file: ci-resources/tasks/make-docker-build-args/task.yml
    input_mapping:
      repository: eirini-fluentd
  - put: docker-fluentd
    params:
      build: eirini-fluentd/fluentd/
      build_args_file: docker-build-args/args.json

resources:
- name: ci-resources
  type: git
  icon: git
  source:
    uri: https://github.com/cloudfoundry-incubator/eirini-ci
    branch: ((ci-resources-branch))
- name: sample-configs
  type: git
  icon: git
  source:
    uri: https://github.com/cloudfoundry-incubator/eirini-ci
    branch: ((ci-resources-branch))
    paths:
    - sample-configs
- name: eirini
  type: git
  icon: git
  source:
    uri: https://github.com/cloudfoundry-incubator/eirini.git
    branch: ((eirini-branch))
    ignore_paths:
    - docker/opi/init/
    - docker/registry/certs/smuggler/
    - fluentd/
- name: eirini-secret-smuggler
  type: git
  icon: git
  source:
    uri: https://github.com/cloudfoundry-incubator/eirini.git
    branch: ((eirini-branch))
    paths:
    - docker/registry/certs/smuggler
- name: eirini-fluentd
  type: git
  icon: git
  source:
    uri: https://github.com/cloudfoundry-incubator/eirini.git
    branch: ((eirini-branch))
    paths:
    - fluentd/
- name: docker-opi
  type: docker-image
  icon: docker
  source:
    repository: eirini/opi
    tag: pipeline
    username: ((dockerhub-user))
    password: ((dockerhub-password))
- name: docker-secret-smuggler
  type: docker-image
  icon: docker
  source:
    repository: eirini/secret-smuggler
    tag: pipeline
    username: ((dockerhub-user))
    password: ((dockerhub-password))
- name: docker-bits-waiter
  type: docker-image
  icon: docker
  source:
    repository: eirini/bits-waiter
    tag: pipeline
    username: ((dockerhub-user))
    password: ((dockerhub-password))
- name: docker-rootfs-patcher
  type: docker-image
  icon: docker
  source:
    repository: eirini/rootfs-patcher
    tag: pipeline
    username: ((dockerhub-user))
    password: ((dockerhub-password))
- name: docker-fluentd
  type: docker-image
  icon: docker
  source:
    repository: eirini/loggregator-fluentd
    tag: pipeline
    username: ((dockerhub-user))
    password: ((dockerhub-password))
- name: fluentd-image
  type: docker-image
  icon: docker
  source:
    repository: fluent/fluentd-kubernetes-daemonset
    tag: v1-debian-elasticsearch
    username: ((dockerhub-user))
    password: ((dockerhub-password))
- name: golang-lint
  type: docker-image
  icon: docker
  source:
    repository: golangci/golangci-lint
    tag: latest
