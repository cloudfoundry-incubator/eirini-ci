jobs:
- name: publish-release
  on_failure: (( grab slack-notification.on_failure ))
  plan:
  - get: ci-resources
  - get: gh-pages-pr
  - task: check-for-pending-release
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: eirini/ibmcloud
      inputs:
      - name: ci-resources
      - name: gh-pages-pr
      run:
        path: /usr/bin/env
        args:
        - bash
        - -c
        - (( file "../../inline-tasks/check-for-pending-release.sh" ))
    params:
      GITHUB_TOKEN: ((github-access-token))
  - get: state
    resource: cluster-state
  - get: eirini-release
    passed:
    - run-smoke-tests-acceptance
    - "the-egg-police"
    - smoke-tests-cf4k8s4a8e
  - get: eirini-release-version
  - task: create-release
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: eirini/ibmcloud
      inputs:
      - name: ci-resources
      - name: state
      - name: eirini-release
      - name: eirini-release-version
      outputs:
      - name: release-output
      - name: release-output-yaml
      run:
        path: /usr/bin/env
        args:
        - bash
        - -c
        - (( file "../../inline-tasks/create-release.sh" ))
  - task: update-helm-repo
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: eirini/ibmcloud
      inputs:
      - name: ci-resources
      - name: release-output
      - name: eirini-release-version
      - name: gh-pages-pr
      outputs:
      - name: gh-pages-updated
      run:
        path: /usr/bin/env
        args:
        - bash
        - -c
        - (( file "../../inline-tasks/update-helm-repo.sh" ))
  - params:
      globs:
      - release-output/eirini*.tgz
      - release-output-yaml/*.tgz
      name: eirini-release-version/version
      tag: eirini-release-version/version
      tag_prefix: v
    put: eirini-scf-release
  - params:
      repository: gh-pages-updated
    put: gh-pages-pr
  - task: create-github-pr
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: eirini/ibmcloud
      inputs:
      - name: ci-resources
      run:
        path: /usr/bin/env
        args:
        - bash
        - -c
        - (( file "../../inline-tasks/create-github-pr.sh" ))
    params:
      GITHUB_TOKEN: ((github-access-token))
  - get: eirini
  - task: checkout-eirini-sha
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: eirini/ci
      inputs:
      - name: eirini-release
      - name: repository
      - name: ci-resources
      outputs:
      - name: repository-modified
      run:
        path: /usr/bin/env
        args:
        - bash
        - -c
        - (( file "../../inline-tasks/checkout-sha-by-image.sh" ))
    input_mapping:
      repository: eirini
    output_mapping:
      repository-modified: eirini-modified
    params:
      IMAGE_NAME: eirini/opi
      VERSION_FILE: opi
    privileged: true
  - params:
      only_tag: true
      repository: eirini-modified
      tag: eirini-release-version/version
    put: eirini
  - get: staging
  - task: checkout-staging-sha
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: eirini/ci
      inputs:
      - name: eirini-release
      - name: repository
      - name: ci-resources
      outputs:
      - name: repository-modified
      run:
        path: /usr/bin/env
        args:
        - bash
        - -c
        - (( file "../../inline-tasks/checkout-sha-by-image.sh" ))
    input_mapping:
      repository: staging
    output_mapping:
      repository-modified: staging-modified
    params:
      IMAGE_NAME: eirini/recipe-downloader
      VERSION_FILE: staging-downloader
    privileged: true
  - params:
      only_tag: true
      repository: staging-modified
      tag: eirini-release-version/version
    put: staging
