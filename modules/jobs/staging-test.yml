jobs:
- name: staging-test
  plan:
  - in_parallel:
      steps:
      - get: eirini-staging
        trigger: true
      - get: golang-lint
        params:
          skip_download: true
        trigger: true
      - get: ci-resources
  - in_parallel:
      steps:
      - config:
          image_resource:
            source:
              repository: eirini/ci
              username: (( grab config.dockerhub.user ))
              password: (( grab config.dockerhub.password ))
            type: docker-image
          inputs:
          - name: eirini-staging
          platform: linux
          run:
            dir: eirini-staging
            path: scripts/test.sh
        task: run-unit-tests
      - task: lint
        input_mapping:
          eirini: eirini-staging
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: golangci/golangci-lint
              username: (( grab config.dockerhub.user ))
              password: (( grab config.dockerhub.password ))
              tag: latest
          inputs:
          - name: ci-resources
          - name: eirini
          run:
            path: /usr/bin/env
            args:
            - sh
            - -c
            - (( file "../../inline-tasks/run-static-checks.sh" ))
        task: lint
      - config:
          image_resource:
            source:
              repository: eirini/staging-integration
              username: (( grab config.dockerhub.user ))
              password: (( grab config.dockerhub.password ))
            type: docker-image
          inputs:
          - name: eirini-staging
          platform: linux
          run:
            dir: eirini-staging
            path: scripts/integration-test.sh
        task: run-integration-test
  on_failure: (( grab slack-notification.on_failure  ))
