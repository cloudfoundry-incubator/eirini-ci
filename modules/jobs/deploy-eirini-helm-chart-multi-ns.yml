jobs:
- name: deploy-eirini-helm-chart-multi-ns-((world-name))
  serial: true
  serial_groups:
  - ((world-name))
  plan:
  - get: ci-resources
  - get: cluster-state
  - get: eirini-release
    trigger: true
    passed:
    - run-eats-tests-single-ns-((world-name))
  - get: eirini
    passed:
    - run-eats-tests-single-ns-((world-name))
  - task: get-kubeconfig
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: eirini/ibmcloud
          username: (( grab config.dockerhub.user ))
          password: (( grab config.dockerhub.password ))
      inputs:
      - name: ci-resources
      outputs:
      - name: kube
      run:
        path: /usr/bin/env
        args:
        - bash
        - -c
        - (( file "../../inline-tasks/download-kubeconfig.sh" ))
    params:
      CLUSTER_NAME: (( grab config.cluster.name ))
      IBMCLOUD_ACCOUNT: (( grab config.ibmcloud.account ))
      IBMCLOUD_PASSWORD: (( grab config.ibmcloud.password ))
      IBMCLOUD_USER: (( grab config.ibmcloud.user ))
  - task: clean-up-helm-deployment
    config:
      platform: linux
      image_resource:
        source:
          repository: eirini/ibmcloud
          username: (( grab config.dockerhub.user ))
          password: (( grab config.dockerhub.password ))
        type: docker-image
      inputs:
      - name: kube
      - name: eirini-release
      params:
        KUBECONFIG: "kube/config"
      run:
        path: eirini-release/helm/scripts/helm-cleanup.sh
  - task: deploy-eirini
    input_mapping:
      eirini-ci: ci-resources
    config:
      platform: linux
      image_resource:
        source:
          repository: eirini/ibmcloud
          username: (( grab config.dockerhub.user ))
          password: (( grab config.dockerhub.password ))
        type: docker-image
      inputs:
      - name: kube
      - name: eirini-release
      - name: cluster-state
      - name: eirini-ci
      params:
        CLUSTER_NAME: (( grab config.cluster.name ))
        NATS_PASSWORD: (( grab config.cluster.nats-password ))
        WIREMOCK_YAML: (( file "../../../eirini-release/helm/scripts/assets/wiremock.yml" ))
        KUBECONFIG: "kube/config"
        USE_MULTI_NAMESPACE: "true"
      run:
        path: eirini-release/helm/scripts/helm-deploy-eirini.sh
  - task: verify-deployment
    config:
       platform: linux
       image_resource:
         type: docker-image
         source:
           repository: eirini/ibmcloud
           username: (( grab config.dockerhub.user ))
           password: (( grab config.dockerhub.password ))
       inputs:
       - name: kube
       run:
         path: /usr/bin/env
         args:
         - bash
         - -c
         - (( file "../../inline-tasks/verify-helm-deployment.sh" ))
  on_failure: (( grab slack-notification.on_failure ))
